---
- name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yaml"
    - "{{ ansible_os_family }}.yaml"
  ignore_errors: yes

- name: Clean up all caches and repos
  shell: "dnf clean all"
  ignore_errors: True

#- debug:
#    msg: "{{ trinityx_repositories }}"

- block:
  - name: Configure repos
    ansible.builtin.yum_repository:
      name: "{{ item.name }}"
      description: "{{ item.name }}"
      baseurl: "{{ item.repo }}"
      gpgcheck: "{{ item.gpgcheck | default(False) }}"
      gpgkey: "{{ item.gpgkey | default('') }}"
      reposdir: "{{ params.install_root + '/etc/yum.repos.d/' if params.install_root is defined else '/etc/yum.repos.d' }}"
    with_items: "{{ trinityx_repositories }}"

#  - name: Add GPG keys to RPM DB. normally NOT needed - Antoine
#    ansible.builtin.rpm_key:
#      state: present
#      key: "{{ item.gpgkey | default('') }}"
#    with_items: "{{ trinityx_repositories }}"
#    ignore_errors: True

#  - name: Download external repo RPMS
#    get_url: 
#      url: "{{ item.name }}"
#      dest: "/tmp/{{ item.file }}"
#    with_items: "{{ external_repository_rpms }}"

  - name: Install external repo RPMS
    dnf:
#      name: "/tmp/{{ item.file }}"
      name: "{{ item.name }}"
      disable_gpg_check: "{{ item.no_gpgcheck | default(False) }}"
      state: present
      installroot: "{{ params.install_root if params.install_root is defined else '/' }}"
    with_items: "{{ external_repository_rpms }}"

  - name: Install external repo Packages
    dnf:
      name: "{{ item.name }}"
#      disable_gpg_check: "{{ item.no_gpgcheck | default(False) }}"
      state: present
      installroot: "{{ params.install_root if params.install_root is defined else '/' }}"
    with_items: "{{ package_based_repositories }}"

  when: ansible_facts['os_family'] == "RedHat"
  tags: install-only



# Disable all remote repos (without *-local suffix)
# If we have local install
#
- block:

  # FIXME
  # Was trying to do it via yum_repos, lineinfile or ini_file
  # modules. Got monstrous construction at the end.
  - name: Install yum-utils to make yum-config-manager available
    yum:
      name: yum-utils
      state: installed

  - name: Disable all repo without '*-local' suffix
    shell: >
      yum-config-manager  \
      | sed -n 's/^\[\(.*\)\]$/\1/p' \
      | egrep -v "\-local$" \
      | xargs yum-config-manager --disable {}

    args:
      warn: no

  when: local_install | default(False)

