---
- name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}.yaml"
    - "{{ ansible_os_family }}.yaml"

- debug:
    msg: "{{ trinityx_repositories }}"

- block:
  - name: Configure repos
    ansible.builtin.yum_repository:
      name: "{{ item.name }}"
      description: "{{ item.name }}"
      baseurl: "{{ item.repo }}"
      gpgcheck: "{{ item.gpgcheck | default(False) }}"
      gpgkey: "{{ item.gpgkey | default('') }}"
    with_items: "{{ trinityx_repositories }}"

  - name: Download external repo RPMS
    get_url: 
      url: "{{ item.name }}"
      dest: "/tmp/{{ item.file }}"
    with_items: "{{ external_repository_rpms }}"

  - name: Install external repo RPMS
    yum:
      name: "/tmp/{{ item.file }}"
      disable_gpg_check: "{{ item.no_gpgcheck | default(False) }}"
      state: present
    with_items: "{{ external_repository_rpms }}"
  when: ansible_facts['os_family'] == "RedHat"
  tags: install-only



# reposdir


# Disable all remote repos (without *-local suffix)
# If we have local install
#
- block:

  # FIXME
  # Was trying to do it via yum_repos, lineinfile or ini_file
  # modules. Got monstrous construction at the end.
  - name: Install yum-utils to make yum-config-manager available
    yum:
      name: yum-utils
      state: installed

  - name: Disable all repo without '*-local' suffix
    shell: >
      yum-config-manager  \
      | sed -n 's/^\[\(.*\)\]$/\1/p' \
      | egrep -v "\-local$" \
      | xargs yum-config-manager --disable {}

    args:
      warn: no

  when: local_install | default(False)

- name: Download Elrepo RPM
  copy: 
    src: https://www.elrepo.org/elrepo-release-{{ hostvars[inventory_hostname].ansible_distribution_major_version }}.el{{ hostvars[inventory_hostname].ansible_distribution_major_version }}.elrepo.noarch.rpm
    dst: /tmp/elrepo-release-{{ hostvars[inventory_hostname].ansible_distribution_major_version }}.el{{ hostvars[inventory_hostname].ansible_distribution_major_version }}.elrepo.noarch.rpm
  when: ansible_facts[‘os_family’] == "RedHat"

- name: Install Elrepo 
  yum:
   name: /tmp/elrepo-release-{{ hostvars[inventory_hostname].ansible_distribution_major_version }}.el{{ hostvars[inventory_hostname].ansible_distribution_major_version }}.elrepo.noarch.rpm
   state: present
  when: ansible_facts[‘os_family’] == "RedHat"

