---
# * Internal use only *
# Configuration date: 01-Oct-2019
# Author <matthew.steggink@clustervision.com>

stages:
  - syntax
  - molecule
  - integration


integration:
  # This phase will check out the complete projectgroup.
  #
  image: sdesbure/ansible-lint
  stage: integration
  script:
    - apk add --no-cache --wait 10 git
    - git clone http://gitlab.clustervision.lan/trinityx/molecule.git molecule
    - git clone http://gitlab.clustervision.lan/trinityx/trinityx.git trinityx
    - cd trinityx; git submodule update --init --recursive
    - find .
  allow_failure: true


gitlabci:
  # This phase will detect changes with the current CI/CD testing for roles.
  # When this fails, the file (thus configuration) differs.
  image: alpine:latest
  stage: syntax
  script:
    - apk add --no-cache --wait 10 git
    - git clone http://gitlab.clustervision.lan/trinityx/molecule.git molecule
    - diff .gitlab-ci.yml molecule/configs/gitlab-ansibleroles-ci.yml
  allow_failure: true


yamllint:
  image: sdesbure/yamllint
  stage: syntax
  script:
    - yamllint -v
    - apk add --no-cache --wait 10 git
    - git clone http://gitlab.clustervision.lan/trinityx/molecule.git molecule
    - find . -name '*.yml' -exec yamllint -c molecule/default/yamllint.yml {} +
  allow_failure: true


centos7.7:
  only:
    - dev
    - develop
    - master
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE: centos7/7.7.1908
    SPACES: 'echo -n " " >> molecule/default/playbook.yml;'
    ROLENAMESHORT: "${CI_PROJECT_NAME}"
    ROLENAME: 'echo " - role: ${CI_PROJECT_NAME}" >> molecule/default/playbook.yml'
    DOCKER_HOST: tcp://172.17.0.1:2375
    ANSIBLE_LIBRARY: "/root/.ansible/roles/"
  cache:
    paths:
      - .pip/
      - virtenv/
  before_script:
    - git clone http://192.168.120.205/trinityx/molecule.git molecule
    - 'eval $SPACES $SPACES $ROLENAME'
    - mkdir -p molecule/default/tests
    - if [ -d molecule/default/testinfra/${ROLENAMESHORT} ]; then
      cp -a molecule/default/testinfra/${ROLENAMESHORT}/* molecule/default/tests; fi
    - pip install --upgrade setuptools
    - pip install virtualenv molecule --ignore-installed PyYAML
    - virtualenv virtenv
    - source virtenv/bin/activate
    - ansible-galaxy install OndrejHome.pcs-modules-2 -p /builds/trinityx
  image: 192.168.120.210:5000/centos7/buildimage
  stage: molecule
  tags:
    - pip
    - docker
    - molecule
  script:
    - docker -v
    - docker ps
    - python -V
    - ansible --version
    - molecule test


centos7.6:
  only:
    - dev
    - develop
    - master
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE: centos7/7.6.1810
    SPACES: 'echo -n " " >> molecule/default/playbook.yml;'
    ROLENAMESHORT: "${CI_PROJECT_NAME}"
    ROLENAME: 'echo " - role: ${CI_PROJECT_NAME}" >> molecule/default/playbook.yml'
    DOCKER_HOST: tcp://172.17.0.1:2375
    ANSIBLE_LIBRARY: "/root/.ansible/roles/"
  cache:
    paths:
      - .pip/
      - virtenv/
  before_script:
    - git clone http://192.168.120.205/trinityx/molecule.git molecule
    - 'eval $SPACES $SPACES $ROLENAME'
    - mkdir -p molecule/default/tests
    - if [ -d molecule/default/testinfra/${ROLENAMESHORT} ]; then
      cp -a molecule/default/testinfra/${ROLENAMESHORT}/* molecule/default/tests; fi
    - pip install --upgrade setuptools
    - pip install virtualenv molecule --ignore-installed PyYAML
    - virtualenv virtenv
    - source virtenv/bin/activate
    - ansible-galaxy install OndrejHome.pcs-modules-2 -p /builds/trinityx
  image: 192.168.120.210:5000/centos7/buildimage
  stage: molecule
  tags:
    - pip
    - docker
    - molecule
  script:
    - docker -v
    - docker ps
    - python -V
    - ansible --version
    - molecule test


centos7.5:
  only:
    - dev
    - develop
    - master
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE: centos7/7.5.1804
    SPACES: 'echo -n " " >> molecule/default/playbook.yml;'
    ROLENAMESHORT: "${CI_PROJECT_NAME}"
    ROLENAME: 'echo " - role: ${CI_PROJECT_NAME}" >> molecule/default/playbook.yml'
    DOCKER_HOST: tcp://172.17.0.1:2375
    ANSIBLE_LIBRARY: "/root/.ansible/roles/"
  cache:
    paths:
      - .pip/
      - virtenv/
  before_script:
    - git clone http://192.168.120.205/trinityx/molecule.git molecule
    - 'eval $SPACES $SPACES $ROLENAME'
    - mkdir -p molecule/default/tests
    - if [ -d molecule/default/testinfra/${ROLENAMESHORT} ]; then
      cp -a molecule/default/testinfra/${ROLENAMESHORT}/* molecule/default/tests; fi
    - pip install --upgrade setuptools
    - pip install virtualenv molecule --ignore-installed PyYAML
    - virtualenv virtenv
    - source virtenv/bin/activate
    - ansible-galaxy install OndrejHome.pcs-modules-2 -p /builds/trinityx
  image: 192.168.120.210:5000/centos7/buildimage
  stage: molecule
  tags:
    - pip
    - docker
    - molecule
  script:
    - docker -v
    - docker ps
    - python -V
    - ansible --version
    - molecule test

rhel7.7.140:
  only:
    - dev
    - develop
    - master
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE: rhel7/7.7.140
    SPACES: 'echo -n " " >> molecule/default/playbook.yml;'
    ROLENAMESHORT: "${CI_PROJECT_NAME}"
    ROLENAME: 'echo " - role: ${CI_PROJECT_NAME}" >> molecule/default/playbook.yml'
    DOCKER_HOST: tcp://172.17.0.1:2375
    ANSIBLE_LIBRARY: "/root/.ansible/roles/"
  cache:
    paths:
      - .pip/
      - virtenv/
  before_script:
    - git clone http://192.168.120.205/trinityx/molecule.git molecule
    - 'eval $SPACES $SPACES $ROLENAME'
    - mkdir -p molecule/default/tests
    - if [ -d molecule/default/testinfra/${ROLENAMESHORT} ]; then
      cp -a molecule/default/testinfra/${ROLENAMESHORT}/* molecule/default/tests; fi
    - pip install --upgrade setuptools
    - pip install virtualenv molecule --ignore-installed PyYAML
    - virtualenv virtenv
    - source virtenv/bin/activate
    - ansible-galaxy install OndrejHome.pcs-modules-2 -p /builds/trinityx
  image: 192.168.120.210:5000/centos7/buildimage
  stage: molecule
  tags:
    - pip
    - docker
    - molecule
  script:
    - docker -v
    - docker ps
    - python -V
    - ansible --version
    - molecule test


rhel7.6.239:
  only:
    - dev
    - develop
    - master
  services:
    - docker:dind
  variables:
    DOCKER_IMAGE: rhel7/7.6.239
    SPACES: 'echo -n " " >> molecule/default/playbook.yml;'
    ROLENAMESHORT: "${CI_PROJECT_NAME}"
    ROLENAME: 'echo " - role: ${CI_PROJECT_NAME}" >> molecule/default/playbook.yml'
    DOCKER_HOST: tcp://172.17.0.1:2375
    ANSIBLE_LIBRARY: "/root/.ansible/roles/"
  cache:
    paths:
      - .pip/
      - virtenv/
  before_script:
    - git clone http://192.168.120.205/trinityx/molecule.git molecule
    - 'eval $SPACES $SPACES $ROLENAME'
    - mkdir -p molecule/default/tests
    - if [ -d molecule/default/testinfra/${ROLENAMESHORT} ]; then
      cp -a molecule/default/testinfra/${ROLENAMESHORT}/* molecule/default/tests; fi
    - pip install --upgrade setuptools
    - pip install virtualenv molecule --ignore-installed PyYAML
    - virtualenv virtenv
    - source virtenv/bin/activate
    - ansible-galaxy install OndrejHome.pcs-modules-2 -p /builds/trinityx
  image: 192.168.120.210:5000/centos7/buildimage
  stage: molecule
  tags:
    - pip
    - docker
    - molecule
  script:
    - docker -v
    - docker ps
    - python -V
    - ansible --version
    - molecule test
