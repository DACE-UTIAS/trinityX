---
# tasks file for install GPU

- name: Load a variable file based on the OS type, or a default if not found. Using free-form to specify the file.
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_os_family }}.yaml"
  ignore_errors: true

- name: Install gpu packages
  yum:
    name: '{{ gpu_packages }}'
    state: present
  tags: install-only
  when: ansible_facts['os_family'] == "RedHat"

- name: Install gpu packages
  apt:
    name: '{{ gpu_packages }}'
    state: present
  tags: install-only
  when: ansible_facts['os_family'] == "Debian"

- name: Copy binary
  copy:
    src: "/data/software/NVIDIA-Linux-x86_64-535.104.12-5.14.0-284.30.1-custom.run"
    dest: "/NVIDIA-Linux-x86_64-535.104.12-5.14.0-284.30.1-custom.run"

- name: Install from nvidia binary, IGNORE error if run the second time
  command: modprobe -r nouveau; sh /NVIDIA-Linux-x86_64-535.104.12-5.14.0-284.30.1-custom.run -s -z; rm NVIDIA-Linux-x86_64-535.104.12-5.14.0-284.30.1-custom.run
  changed_when: false
  when: ansible_facts['os_family'] == "RedHat"
  ignore_errors: true

- name: Copy nvidia.conf
  copy:
    src: "nvidia.conf"
    dest: "/etc/modprobe.d/nvidia.conf"

- name: Copy nvidia-installer-disable-nouveau.conf
  copy:
    src: "nvidia-installer-disable-nouveau.conf"
    dest: "/etc/modprobe.d/nvidia-installer-disable-nouveau.conf"

- name: rc-local.service
  copy:
    src: "rc-local.service"
    dest: "/etc/systemd/system/rc-local.service"

- name: /etc/rc.local
  copy:
    src: "rc.local"
    dest: "/etc/rc.d/rc.local"
    owner: root
    group: root
    mode: '0700'

- name: Enable rc-local service
  systemd:
    name: rc-local
    enabled: "yes"


- name: Delete exiting home directory
  file:
    path: "/home"
    state: absent
    force: yes

- name: Ensure home is a symbolic link
  ansible.builtin.file:
    src: /trinity/home
    dest: /home
    state: link
    force: yes
-
